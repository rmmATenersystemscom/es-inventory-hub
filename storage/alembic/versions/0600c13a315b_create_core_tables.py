"""create core tables

Revision ID: 0600c13a315b
Revises: 
Create Date: 2025-08-30 12:39:23.045234

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0600c13a315b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('billing_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('device_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('job_runs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_name', sa.Text(), nullable=False),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('ended_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('status', sa.Text(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_job_runs_job_name', 'job_runs', ['job_name'], unique=False)
    op.create_index('idx_job_runs_started_at', 'job_runs', ['started_at'], unique=False)
    op.create_index('idx_job_runs_status', 'job_runs', ['status'], unique=False)
    op.create_table('vendor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('change_log',
    sa.Column('change_date', sa.Date(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('metric', sa.Text(), nullable=False),
    sa.Column('prev_value', sa.Integer(), nullable=True),
    sa.Column('new_value', sa.Integer(), nullable=True),
    sa.Column('delta', sa.Integer(), nullable=True),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('change_date', 'vendor_id', 'metric')
    )
    op.create_index('idx_change_log_date', 'change_log', ['change_date'], unique=False)
    op.create_index('idx_change_log_metric', 'change_log', ['metric'], unique=False)
    op.create_index('idx_change_log_vendor_id', 'change_log', ['vendor_id'], unique=False)
    op.create_table('device_identity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('vendor_device_key', sa.String(length=255), nullable=False),
    sa.Column('first_seen_date', sa.Date(), nullable=False),
    sa.Column('last_seen_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'vendor_device_key', name='uq_device_identity_vendor_device_key')
    )
    op.create_index('idx_device_identity_first_seen', 'device_identity', ['first_seen_date'], unique=False)
    op.create_index('idx_device_identity_last_seen', 'device_identity', ['last_seen_date'], unique=False)
    op.create_index('idx_device_identity_vendor_device_key', 'device_identity', ['vendor_device_key'], unique=False)
    op.create_index('idx_device_identity_vendor_id', 'device_identity', ['vendor_id'], unique=False)
    op.create_table('site',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('vendor_site_key', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'vendor_site_key', name='uq_site_vendor_site_key')
    )
    op.create_index('idx_site_vendor_id', 'site', ['vendor_id'], unique=False)
    op.create_index('idx_site_vendor_site_key', 'site', ['vendor_site_key'], unique=False)
    op.create_table('site_alias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('canonical_name', sa.String(length=255), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('vendor_site_key', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'vendor_site_key', name='uq_site_alias_vendor_site_key')
    )
    op.create_index('idx_site_alias_vendor_id', 'site_alias', ['vendor_id'], unique=False)
    op.create_index('idx_site_alias_vendor_site_key', 'site_alias', ['vendor_site_key'], unique=False)
    op.create_table('daily_counts',
    sa.Column('snapshot_date', sa.Date(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('device_type_id', sa.Integer(), nullable=True),
    sa.Column('billing_status_id', sa.Integer(), nullable=True),
    sa.Column('cnt', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['billing_status_id'], ['billing_status.id'], ),
    sa.ForeignKeyConstraint(['device_type_id'], ['device_type.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('snapshot_date', 'vendor_id', 'site_id', 'device_type_id', 'billing_status_id')
    )
    op.create_index('idx_daily_counts_billing_status_id', 'daily_counts', ['billing_status_id'], unique=False)
    op.create_index('idx_daily_counts_date', 'daily_counts', ['snapshot_date'], unique=False)
    op.create_index('idx_daily_counts_device_type_id', 'daily_counts', ['device_type_id'], unique=False)
    op.create_index('idx_daily_counts_site_id', 'daily_counts', ['site_id'], unique=False)
    op.create_index('idx_daily_counts_vendor_id', 'daily_counts', ['vendor_id'], unique=False)
    op.create_table('device_snapshot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('snapshot_date', sa.Date(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('device_identity_id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('device_type_id', sa.Integer(), nullable=True),
    sa.Column('billing_status_id', sa.Integer(), nullable=True),
    sa.Column('hostname', sa.String(length=255), nullable=True),
    sa.Column('serial_number', sa.String(length=255), nullable=True),
    sa.Column('os_name', sa.String(length=255), nullable=True),
    sa.Column('tpm_status', sa.String(length=100), nullable=True),
    sa.Column('raw', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('attrs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('content_hash', sa.String(length=64), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['billing_status_id'], ['billing_status.id'], ),
    sa.ForeignKeyConstraint(['device_identity_id'], ['device_identity.id'], ),
    sa.ForeignKeyConstraint(['device_type_id'], ['device_type.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('snapshot_date', 'vendor_id', 'device_identity_id', name='uq_device_snapshot_date_vendor_device')
    )
    op.create_index('idx_device_snapshot_billing_status_id', 'device_snapshot', ['billing_status_id'], unique=False)
    op.create_index('idx_device_snapshot_content_hash', 'device_snapshot', ['content_hash'], unique=False)
    op.create_index('idx_device_snapshot_date', 'device_snapshot', ['snapshot_date'], unique=False)
    op.create_index('idx_device_snapshot_device_identity_id', 'device_snapshot', ['device_identity_id'], unique=False)
    op.create_index('idx_device_snapshot_device_type_id', 'device_snapshot', ['device_type_id'], unique=False)
    op.create_index('idx_device_snapshot_hostname', 'device_snapshot', ['hostname'], unique=False)
    op.create_index('idx_device_snapshot_serial_number', 'device_snapshot', ['serial_number'], unique=False)
    op.create_index('idx_device_snapshot_site_id', 'device_snapshot', ['site_id'], unique=False)
    op.create_index('idx_device_snapshot_vendor_id', 'device_snapshot', ['vendor_id'], unique=False)
    op.create_table('month_end_counts',
    sa.Column('month_end_date', sa.Date(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('device_type_id', sa.Integer(), nullable=True),
    sa.Column('billing_status_id', sa.Integer(), nullable=True),
    sa.Column('cnt', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['billing_status_id'], ['billing_status.id'], ),
    sa.ForeignKeyConstraint(['device_type_id'], ['device_type.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('month_end_date', 'vendor_id', 'site_id', 'device_type_id', 'billing_status_id')
    )
    op.create_index('idx_month_end_counts_billing_status_id', 'month_end_counts', ['billing_status_id'], unique=False)
    op.create_index('idx_month_end_counts_date', 'month_end_counts', ['month_end_date'], unique=False)
    op.create_index('idx_month_end_counts_device_type_id', 'month_end_counts', ['device_type_id'], unique=False)
    op.create_index('idx_month_end_counts_site_id', 'month_end_counts', ['site_id'], unique=False)
    op.create_index('idx_month_end_counts_vendor_id', 'month_end_counts', ['vendor_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_month_end_counts_vendor_id', table_name='month_end_counts')
    op.drop_index('idx_month_end_counts_site_id', table_name='month_end_counts')
    op.drop_index('idx_month_end_counts_device_type_id', table_name='month_end_counts')
    op.drop_index('idx_month_end_counts_date', table_name='month_end_counts')
    op.drop_index('idx_month_end_counts_billing_status_id', table_name='month_end_counts')
    op.drop_table('month_end_counts')
    op.drop_index('idx_device_snapshot_vendor_id', table_name='device_snapshot')
    op.drop_index('idx_device_snapshot_site_id', table_name='device_snapshot')
    op.drop_index('idx_device_snapshot_serial_number', table_name='device_snapshot')
    op.drop_index('idx_device_snapshot_hostname', table_name='device_snapshot')
    op.drop_index('idx_device_snapshot_device_type_id', table_name='device_snapshot')
    op.drop_index('idx_device_snapshot_device_identity_id', table_name='device_snapshot')
    op.drop_index('idx_device_snapshot_date', table_name='device_snapshot')
    op.drop_index('idx_device_snapshot_content_hash', table_name='device_snapshot')
    op.drop_index('idx_device_snapshot_billing_status_id', table_name='device_snapshot')
    op.drop_table('device_snapshot')
    op.drop_index('idx_daily_counts_vendor_id', table_name='daily_counts')
    op.drop_index('idx_daily_counts_site_id', table_name='daily_counts')
    op.drop_index('idx_daily_counts_device_type_id', table_name='daily_counts')
    op.drop_index('idx_daily_counts_date', table_name='daily_counts')
    op.drop_index('idx_daily_counts_billing_status_id', table_name='daily_counts')
    op.drop_table('daily_counts')
    op.drop_index('idx_site_alias_vendor_site_key', table_name='site_alias')
    op.drop_index('idx_site_alias_vendor_id', table_name='site_alias')
    op.drop_table('site_alias')
    op.drop_index('idx_site_vendor_site_key', table_name='site')
    op.drop_index('idx_site_vendor_id', table_name='site')
    op.drop_table('site')
    op.drop_index('idx_device_identity_vendor_id', table_name='device_identity')
    op.drop_index('idx_device_identity_vendor_device_key', table_name='device_identity')
    op.drop_index('idx_device_identity_last_seen', table_name='device_identity')
    op.drop_index('idx_device_identity_first_seen', table_name='device_identity')
    op.drop_table('device_identity')
    op.drop_index('idx_change_log_vendor_id', table_name='change_log')
    op.drop_index('idx_change_log_metric', table_name='change_log')
    op.drop_index('idx_change_log_date', table_name='change_log')
    op.drop_table('change_log')
    op.drop_table('vendor')
    op.drop_index('idx_job_runs_status', table_name='job_runs')
    op.drop_index('idx_job_runs_started_at', table_name='job_runs')
    op.drop_index('idx_job_runs_job_name', table_name='job_runs')
    op.drop_table('job_runs')
    op.drop_table('device_type')
    op.drop_table('billing_status')
    # ### end Alembic commands ###
